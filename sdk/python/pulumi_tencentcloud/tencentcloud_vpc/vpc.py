# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class VPC(pulumi.CustomResource):
    cidr_block: pulumi.Output[str]
    """
    A network address block which should be a subnet of the three internal network segments (10.0.0.0/16, 172.16.0.0/12 and 192.168.0.0/16).
    """
    create_time: pulumi.Output[str]
    """
    Creation time of VPC.
    """
    dns_servers: pulumi.Output[list]
    """
    The DNS server list of the VPC. And you can specify 0 to 5 servers to this list.
    """
    is_default: pulumi.Output[bool]
    """
    Indicates whether it is the default VPC for this region.
    """
    is_multicast: pulumi.Output[bool]
    """
    Indicates whether VPC multicast is enabled. The default value is 'true'.
    """
    name: pulumi.Output[str]
    """
    The name of the VPC.
    """
    tags: pulumi.Output[dict]
    """
    Tags of the VPC.
    """
    def __init__(__self__, resource_name, opts=None, cidr_block=None, dns_servers=None, is_multicast=None, name=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Provide a resource to create a VPC.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cidr_block: A network address block which should be a subnet of the three internal network segments (10.0.0.0/16, 172.16.0.0/12 and 192.168.0.0/16).
        :param pulumi.Input[list] dns_servers: The DNS server list of the VPC. And you can specify 0 to 5 servers to this list.
        :param pulumi.Input[bool] is_multicast: Indicates whether VPC multicast is enabled. The default value is 'true'.
        :param pulumi.Input[str] name: The name of the VPC.
        :param pulumi.Input[dict] tags: Tags of the VPC.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-tencentcloud/blob/master/website/docs/r/vpc.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if cidr_block is None:
                raise TypeError("Missing required property 'cidr_block'")
            __props__['cidr_block'] = cidr_block
            __props__['dns_servers'] = dns_servers
            __props__['is_multicast'] = is_multicast
            __props__['name'] = name
            __props__['tags'] = tags
            __props__['create_time'] = None
            __props__['is_default'] = None
        super(VPC, __self__).__init__(
            'tencentcloud:tencentcloud_vpc/vPC:VPC',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, cidr_block=None, create_time=None, dns_servers=None, is_default=None, is_multicast=None, name=None, tags=None):
        """
        Get an existing VPC resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cidr_block: A network address block which should be a subnet of the three internal network segments (10.0.0.0/16, 172.16.0.0/12 and 192.168.0.0/16).
        :param pulumi.Input[str] create_time: Creation time of VPC.
        :param pulumi.Input[list] dns_servers: The DNS server list of the VPC. And you can specify 0 to 5 servers to this list.
        :param pulumi.Input[bool] is_default: Indicates whether it is the default VPC for this region.
        :param pulumi.Input[bool] is_multicast: Indicates whether VPC multicast is enabled. The default value is 'true'.
        :param pulumi.Input[str] name: The name of the VPC.
        :param pulumi.Input[dict] tags: Tags of the VPC.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-tencentcloud/blob/master/website/docs/r/vpc.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["cidr_block"] = cidr_block
        __props__["create_time"] = create_time
        __props__["dns_servers"] = dns_servers
        __props__["is_default"] = is_default
        __props__["is_multicast"] = is_multicast
        __props__["name"] = name
        __props__["tags"] = tags
        return VPC(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

